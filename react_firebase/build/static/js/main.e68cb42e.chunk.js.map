{"version":3,"sources":["fbase.js","routes/Table.jsx","routes/Home.jsx","routes/Profile.jsx","routes/Auth.jsx","routes/EditProfile.jsx","components/Nav.jsx","components/Router.jsx","components/App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","firebaseInstance","Table","board","onClickDelete","onClickEdit","userObj","border","style","width","textAlign","map","post","idx","email","introduce","fileList","length","src","imgUrl","alt","onClick","id","Home","useState","setIntroduce","setBoard","introRef","useRef","imgRef","prevImg","setPrevImg","useEffect","collection","onSnapshot","snapshot","newBoard","docs","doc","data","current","focus","onSubmit","e","a","preventDefault","files","imgName","name","ext","substr","lastIndexOf","newFileName","uuidv4","fileSavePath","ref","child","put","getDownloadURL","add","fileName","value","console","error","delete","alert","set","type","maxLength","placeholder","onChange","target","accept","readfileURL","URL","createObjectURL","Profile","Auth","password","input","setInput","err","setErr","signInWithEmailAndPassword","createUserWithEmailAndPassword","message","onSnsLogin","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","color","EditProfile","Nav","isLoggedIn","to","signOut","Router","path","element","App","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e68cb42e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\nexport const firebaseInstance = firebase;","import React from 'react';\r\n\r\nfunction Table({ board, onClickDelete, onClickEdit, userObj }) {\r\n    return (\r\n        <table border='1' style={{ width : \"500px\", textAlign : 'center'}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>email</th>\r\n                    <th>introduce</th>\r\n                    <th>이미지</th>\r\n                    <th>수정</th>\r\n                    <th>삭제</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    board.map((post, idx) => (\r\n                        <tr key={post.id}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{post.email}</td>\r\n                            <td>{post.introduce}</td>\r\n                            { post.fileList.length > 0 ?\r\n                            <td><img src={post.fileList[0].imgUrl} width='150' alt=\"설정이미지\" /></td>\r\n                            :\r\n                            <td></td>\r\n                            }\r\n                            { userObj.email === post.email ?\r\n                                <>\r\n                                    <td><button onClick={() => onClickEdit(post.id, post.email, post.fileList)}>수정</button></td>\r\n                                    <td><button onClick={() => onClickDelete(post.id, post.email, post.fileList)}>삭제</button></td>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </>\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import { dbService, storageService } from 'fbase'\r\nimport Table from './Table';\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Home({ userObj }) {\r\n    const [introduce, setIntroduce] = useState('');\r\n    const [board, setBoard] = useState([]);\r\n    const introRef = useRef();\r\n    const imgRef = useRef();\r\n    const [prevImg, setPrevImg] = useState('');\r\n    useEffect(() => {\r\n        //fireStore의 변경이 생기면 실행되는 것\r\n        dbService.collection('board').onSnapshot(snapshot => {\r\n            const newBoard = snapshot.docs.map(doc => {\r\n                return({\r\n                    ...doc.data(),\r\n                    id :doc.id,\r\n                })\r\n            })\r\n            setBoard(newBoard);\r\n        })\r\n        introRef.current.focus();\r\n\r\n        return () => {\r\n            setBoard([]);\r\n        }\r\n    },[]);\r\n    const onChangeInput = (e) => {\r\n        setIntroduce(e.target.value)\r\n    }\r\n    const onSubmit = async(e) => {\r\n        try {\r\n            e.preventDefault();\r\n            if(imgRef.current.files[0]){\r\n                const imgName = imgRef.current.files[0].name;\r\n                const ext = imgName.substr(imgName.lastIndexOf('.'));\r\n                const newFileName = `${uuidv4()}${ext}`;\r\n                const fileSavePath = storageService.ref().child(`${userObj.email}/${newFileName}`)\r\n    \r\n                const snapshot = await fileSavePath.put(imgRef.current.files[0])\r\n                const imgUrl = await snapshot.ref.getDownloadURL();\r\n                await dbService.collection('board').add({\r\n                    email : userObj.email,\r\n                    introduce,\r\n                    fileList : [{\r\n                        fileName : newFileName,\r\n                        imgUrl\r\n                    }]\r\n                });\r\n            }else{\r\n                await dbService.collection('board').add({\r\n                    email : userObj.email,\r\n                    introduce,\r\n                    fileList : []\r\n                });\r\n            }\r\n            introRef.current.value = '';\r\n            imgRef.current.value = '';\r\n            setPrevImg('');\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n\r\n    const onClickDelete = async(id, email, fileList) => {\r\n        if(userObj.email === email){\r\n            if(fileList.length){\r\n                // dbService.doc(`board/${objId}`).delete()\r\n                await storageService.ref().child(`${userObj.email}/${fileList[0].fileName}`).delete()\r\n                await dbService.collection('board').doc(id).delete()\r\n            }else{\r\n                await dbService.collection('board').doc(id).delete()\r\n            }\r\n        }else{\r\n            alert('내가 쓴 글이 아닙니다');\r\n        }   \r\n    }\r\n\r\n    const onClickEdit = async(id, email, fileList) => {\r\n        if(userObj.email === email){\r\n            if(imgRef.current.files[0]){\r\n                await storageService.ref().child(`${userObj.email}/${fileList[0].fileName}`).delete()\r\n                await dbService.collection('board').doc(id).delete()\r\n                const imgName = imgRef.current.files[0].name;\r\n                const ext = imgName.substr(imgName.lastIndexOf('.'));\r\n                const newFileName = `${uuidv4()}${ext}`;\r\n                const fileSavePath = storageService.ref().child(`${userObj.email}/${newFileName}`)\r\n    \r\n                const snapshot = await fileSavePath.put(imgRef.current.files[0])\r\n                const imgUrl = await snapshot.ref.getDownloadURL();\r\n                await dbService.collection('board').doc(id).set({\r\n                    email : userObj.email,\r\n                    introduce : introRef.current.value,\r\n                    fileList : [{\r\n                        fileName : newFileName,\r\n                        imgUrl\r\n                    }]\r\n                })\r\n            }else{\r\n                await dbService.collection('board').doc(id).set({\r\n                    email : userObj.email,\r\n                    introduce : introRef.current.value,\r\n                    fileList : []\r\n                })\r\n            }\r\n            introRef.current.value = '';\r\n            imgRef.current.value = '';\r\n            setPrevImg('');\r\n\r\n        }else{\r\n            alert('내가 쓴 글이 아닙니다');\r\n        }\r\n    }\r\n\r\n    const onChangeImage = (e) => {\r\n        const readfileURL = URL.createObjectURL(e.target.files[0]);\r\n        setPrevImg(readfileURL)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Home page</h3>\r\n            <br />\r\n            {board.length > 0 &&\r\n                <Table \r\n                    board={board}\r\n                    onClickDelete={onClickDelete} \r\n                    onClickEdit={onClickEdit}\r\n                    userObj={userObj}\r\n                />\r\n            }\r\n            <form onSubmit={onSubmit}>\r\n                <input ref={introRef} type=\"text\" name=\"introduce\" maxLength={120} placeholder=\"introduce\" onChange={onChangeInput}/>\r\n                <input\r\n                    ref={imgRef} \r\n                    type=\"file\" \r\n                    name=\"imageSelector\" \r\n                    accept='image/*'\r\n                    onChange={onChangeImage}\r\n                />\r\n                <br/>\r\n                <input type=\"submit\" />\r\n            </form>\r\n            {\r\n                prevImg && \r\n                <img src={prevImg} alt=\"미리보기 이미지\" width='500' />\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div>\r\n            <h3>Profile page</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import { authService, firebaseInstance } from 'fbase';\r\nimport React, { useState } from 'react'\r\nfunction Auth() {\r\n    const [input, setInput] = useState({\r\n        email : '',\r\n        password : ''\r\n    })\r\n    const [err, setErr] = useState('');\r\n    const onSubmit = async(e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const { email, password } = input;\r\n            const { id } = e.target;\r\n            if( id === 'LoginForm'){\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }else if ( id === 'SignupForm'){\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setErr(error.message);\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        //태그의 value를 넣어두면 onChange가 안됨\r\n        const { name, value } = e.target;\r\n        setInput({\r\n            ...input,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const onSnsLogin = async (e) => {\r\n        try {\r\n            const { name } = e.target;\r\n            let provider;\r\n            if(name === 'google'){\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            }else if(name === 'github'){\r\n                provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            }\r\n            //팝업창으로 로그인\r\n            await authService.signInWithPopup(provider);\r\n        } catch (error) {\r\n            setErr(error.message);\r\n        }\r\n        //sns 로그인을 위해 firebase 객체사용\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Login page</h3>\r\n            {err && <p style={{ color: 'red' }}>{err}</p>}\r\n            <h4>Login</h4>\r\n            <form id='LoginForm' onSubmit={onSubmit}>\r\n                <input type=\"email\" name='email' placeholder='Email' onChange={onChange} />\r\n                <br/>\r\n                <input type=\"password\" name='password' placeholder='password'  onChange={onChange} />\r\n                <br/>\r\n                <input type=\"submit\" value=\"Log in\"  />\r\n            </form>\r\n            <div>\r\n                <button name=\"google\" onClick={onSnsLogin}>Google Login</button>\r\n                <button name=\"github\" onClick={onSnsLogin}>Github Login</button>\r\n            </div>\r\n            <hr />\r\n            <h4>Sign Up</h4>\r\n            <form id='SignupForm' onSubmit={onSubmit}>\r\n                이메일 : <input type=\"email\" name='email' placeholder='Email'  onChange={onChange}/>\r\n                <br/>\r\n                비밀번호 : <input type=\"password\" name='password' placeholder='Password'  onChange={onChange}/>\r\n                <br/>\r\n                <input type=\"submit\" value=\"Sign up\"  />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react'\r\n\r\nfunction EditProfile() {\r\n    return (\r\n        <div>\r\n            <h3>EditProfile page</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","import { authService } from 'fbase';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav({ isLoggedIn }) {\r\n    return (\r\n        <>\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/profile\">profile</Link></li>\r\n                    <li><Link to=\"/edit\">Edit profile</Link></li>\r\n                    {isLoggedIn && \r\n                        <li>\r\n                            <button\r\n                                onClick={() => { authService.signOut()}}\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport React from 'react'\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from 'routes/Auth';\r\nimport EditProfile from 'routes/EditProfile';\r\nimport Nav from './Nav';\r\nfunction Router({ isLoggedIn, userObj }) {\r\n    return (\r\n        <BrowserRouter>\r\n            <Nav isLoggedIn={isLoggedIn}/>\r\n            <Routes>\r\n                {\r\n                    isLoggedIn ? \r\n                    <>\r\n                        <Route path='/' element={<Home userObj={userObj} />} />\r\n                        <Route path='/profile' element={<Profile />} />\r\n                        <Route path='/edit' element={<EditProfile />} />\r\n                    </>\r\n                    :\r\n                    <Route path='*' element={<Auth />}/>\r\n                }\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router\r\n","import Router from \"components/Router\";\nimport React, { useState, useEffect } from 'react';\nimport { authService} from 'fbase';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    //로그인 한 유저의 정보 가져오기\n    authService.onAuthStateChanged(user => {\n      if(user){\n        setIsLoggedIn(user);\n        setUserObj(user);\n      }else{\n        setIsLoggedIn(false);\n      }\n    })\n    return () => {\n      setIsLoggedIn(authService.currentUser);\n    }\n  }, [])\n  return (\n    <Router \n      isLoggedIn={isLoggedIn}\n      userObj={userObj}  \n    />\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}